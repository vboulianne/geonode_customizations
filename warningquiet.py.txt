from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from datetime import datetime
from django.core.mail import send_mail
from json import dumps, loads
# import os


User = get_user_model()
now = datetime.now().timestamp()
gn_action = ""

#path, filename = os.path.split(os.path.abspath(__file__))
path = "/opt/geonode_custom/neec_geoportal/scripts/quiet_users/"


class Command(BaseCommand):
    help = 'Send users a reminded to log once in a while'

    def handle(self, *args, **options):
        notified_user_emailbody = "\n\nCOURRIEL ENVOYÉ:\n\n"
        deactivated_user_emailbody = "\n\nACCÈS DÉSACTIVÉ:\n\n"
        notified_user_nb = 0
        deactivated_user_nb = 0
        all_users = User.objects.filter(is_active=True)


        # following read saved_state.json where a pair username/timestamp has been stored.
        
        with open(path + 'saved_state.json', 'r') as fich:
            chain = fich.read()
            if not chain:
                notified_user_list = {}
            else:
                notified_user_list = loads(chain)
        

        for user in all_users:
                
            
            if user.last_login != None: # account for the possibility that someone never logged in
                timelapse = (now - user.last_login.timestamp())/86400
            else:

                timelapse = (now - user.date_joined.timestamp())/86400
                

            if notified_user_list.get(user.username, None) != None:

                notification_timelapse = (now - notified_user_list.get(user.username, None))/86400 # username/datetimestamp was found in save_state.json
            else:
                notification_timelapse = -1 # username/datetimestamp was NOT found in save_state.json; will trigger sending of email


            if timelapse > 180.0:

                if  notification_timelapse > 30:
                #============== Deactivate user ================
                user.is_active = False
                user.save
                    deactivated_user_emailbody += "\nL'accès de" + user.username + " a été désactivé.\n" 
                    deactivated_user_nb += 1
                    notified_user_list.pop(user.username, None)


                elif notification_timelapse == -1:
                    #============ Send notification ===========
                    if user.language == "fr":
                        with open(path + 'fr_email_quiet_users.txt','r', encoding='utf8') as f:
                            email_int = f.read()
                            
                        email_subject = "Désactivation de votre compte géportail du CNUE dans 30 jours si vous ne vous connectez pas"
                        email_body = email_int.format(user.get_short_name())
                    
                    else:
                        with open(path + 'en_email_quiet_users.txt','r', encoding='utf8') as f:
                            email_int = f.read()
                            
                        email_subject = "Deactivation of NECC geoportal account in 30 days if there is no login"
                        email_body = email_int.format(user.get_short_name())

                    user.email_user(email_subject, email_body, "geoportal@ueee.ca")
                    notified_user_emailbody += "\nUn courriel a été envoyé à " + user.username + " (" + user.email + ")\n" 
                    notified_user_list[user.username] = now
                    notified_user_nb += 1

                else:
                    # Do nothing. The clock is ticking on the 30 days notice
                    pass 
                

            else:
                notified_user_list.pop(user.username, None) # Remove notification flag in saved_state.json

            
        # ==================  Envoyer courriel à l'administrateur de geoportal ===================
        notified_user_emailbody += "\n\nTotal: " + str(notified_user_nb)
        deactivated_user_emailbody += "\n\nTotal: " + str(deactivated_user_nb)
        admin_email_body = "Actions entreprises par le script de vérification des usagers ne s'étant pas connectés depuis plus de 180 jours\n\n" + notified_user_emailbody + deactivated_user_emailbody
        admin_email_subject = "Rapport d'action sur le statuts des usagers sans connection depuis 180 jours"
        send_mail(admin_email_subject, admin_email_body, "geoportal@ueee.ca", ["vincent.boulianne@ec.gc.ca"])


        #=========== Inscrire dans fichier l'état des notifications =============
        with open(path + 'saved_state.json', mode='w') as fich:
            fich.write(dumps(notified_user_list))